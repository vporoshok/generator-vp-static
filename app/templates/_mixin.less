@img: ~'/images/';
<% if (!bootstrap) { %>
@min-width: 755px;
@max-width: 1140px;

@col-num: 12;
@col-sep-md: 20px;
@col-sep-xs: 10px;

.row {
    width: 100%;
    min-width: @min-width;
    max-width: @max-width;
    margin: 0 auto;
    overflow: hidden;
    &:after {
        content: '';
        display: table;
        clear: both;
    }
}
@media handheld, only screen and (max-width: 767px) {
    .row {
        min-width: 0;
        margin: 0;
        padding-left: @col-sep-md;
        padding-right: @col-sep-xs;
        box-sizing: border-box;
    }
    .hidden-xs {
        display: none !important;
        width: 0;
        height: 0;
    }
}
.col(xs) {
    @media handheld, only screen and (max-width: 767px) {
        float: left;
        margin: 0 0 @col-sep-xs 0;
        padding: 0 @col-sep-xs 0 0;
        box-sizing: border-box;
    }
}
.col(md) {
    float: left;
    padding-right: @col-sep-md;
    box-sizing: border-box;
    @media handheld, only screen and (max-width: 767px) {
        width: auto;
        float: none;
        margin: @col-sep-xs 0;
        padding: 0 @col-sep-xs 0 0;
        box-sizing: border-box;
    }
}
.gen-grid(xs);
.gen-grid(md);

.gen-grid(@suffix) {
    .gen-common() {
        .gen-common(1, ~'.col-@{suffix}-1');
    }
    .gen-common(@i, @res) when (@i =< @col-num) {
        @item: ~'.col-@{suffix}-@{i}';
        .gen-common((@i + 1), ~'@{res}, @{item}');
    }
    .gen-common(@i, @res) when (@i > @col-num) {
        @{res} {
            .col(@suffix);
        }
    }

    .gen-column(@i: 1) when (@i =< @col-num) {
        .col-@{suffix}-@{i} {
            width: percentage(@i / @col-num);
        }
        .gen-column((@i + 1));
    }

    .gen-offset(@i: 1) when (@i =< @col-num) {
        .col-@{suffix}-offset-@{i} {
            margin-left: percentage(@i / @col-num);
        }
        .gen-offset((@i + 1));
    }

    .gen-common();
    .gen-column();
    .gen-offset();
}
<% } %>
